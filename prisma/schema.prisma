generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model areas {
  id           Int            @id(map: "PK_areas") @default(autoincrement())
  nombre       String         @db.VarChar(100)
  areas_estado areas_estado[]
  productos    productos[]
}

model areas_estado {
  int     Int     @id(map: "PK_areas_estado") @default(autoincrement())
  activo  Boolean @default(true, map: "DF_areas_estado_activo")
  area_id Int
  areas   areas   @relation(fields: [area_id], references: [id], onDelete: Cascade, map: "FK_areas_estado_areas")
}

model productos {
  id               Int                @id(map: "PK_productos") @default(autoincrement())
  nombre           String             @db.Text
  precio           Decimal            @db.Decimal(18, 2)
  disponibles      Int
  area_id          Int
  areas            areas              @relation(fields: [area_id], references: [id], onDelete: Cascade, map: "FK_productos_areas")
  productos_estado productos_estado[]
  productos_tipo   productos_tipo[]
  venta_detalles   venta_detalles[]
}

model productos_estado {
  id          Int       @id(map: "PK_productos_estado") @default(autoincrement())
  producto_id Int
  activo      Boolean   @default(true, map: "DF_productos_estado_activo")
  productos   productos @relation(fields: [producto_id], references: [id], onDelete: Cascade, map: "FK_productos_estado_productos")
}

model productos_tipo {
  id          Int       @id(map: "PK_productos_tipo") @default(autoincrement())
  tipo        String    @db.VarChar(100)
  producto_id Int
  productos   productos @relation(fields: [producto_id], references: [id], onDelete: Cascade, map: "FK_productos_tipo_productos")
}

model seguridad {
  id         Int      @id(map: "PK_seguridad") @default(autoincrement())
  token      String?  @db.VarChar(255)
  usuario_id Int
  usuarios   usuarios @relation(fields: [usuario_id], references: [id], onDelete: Cascade, map: "FK_seguridad_usuarios1")
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B6182CC8379") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model usuarios {
  id             Int         @id(map: "PK_usuarios") @default(autoincrement())
  nombre_usuario String      @db.VarChar(50)
  correo         String      @db.VarChar(255)
  contrasena     String      @db.VarChar(255)
  seguridad      seguridad[]
  ventas         ventas[]
}

model venta_detalles {
  id          Int       @id(map: "PK_venta_detalles") @default(autoincrement())
  producto_id Int
  venta_id    Int
  cantidad    Int
  productos   productos @relation(fields: [producto_id], references: [id], onDelete: Cascade, map: "FK_venta_detalles_productos")
  ventas      ventas    @relation(fields: [venta_id], references: [id], onDelete: Cascade, map: "FK_venta_detalles_ventas")
}

model ventas {
  id             Int              @id(map: "PK_ventas") @default(autoincrement())
  fecha          DateTime         @db.DateTime
  total          Decimal          @db.Decimal(18, 2)
  usuario_id     Int
  cliente        String?          @default("CLIENTE", map: "DF_ventas_cliente") @db.VarChar(100)
  dni            String?          @default("0", map: "DF_ventas_dni") @db.Char(8)
  venta_detalles venta_detalles[]
  usuarios       usuarios         @relation(fields: [usuario_id], references: [id], onDelete: Cascade, map: "FK_ventas_usuarios")
}
